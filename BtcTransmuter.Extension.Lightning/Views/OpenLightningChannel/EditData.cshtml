@using BTCPayServer.Lightning
@using Microsoft.EntityFrameworkCore.Internal
@model BtcTransmuter.Extension.Lightning.Actions.CreateBolt11Invoice.CreateBolt11InvoiceController.CreateBolt11InvoiceViewModel
@{
    ViewData["Title"] = "Edit Open Lightning Channel Action";
}

<h2>@ViewData["Title"]</h2>


<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="ExternalServiceId" class="control-label"></label>
        <select asp-for="ExternalServiceId" asp-items="Model.ExternalServices" class="form-control"></select>
        <span asp-validation-for="ExternalServiceId" class="text-danger"></span>
        @if (!Model.ExternalServices.Items.Any())
        {
            <span class="text-danger">There are no Lightning Node external services available to create this action. <a asp-action="CreateExternalService" asp-controller="ExternalServices">Create one</a></span>
        }
    </div>
    <div class="form-group">
        <label asp-for="Amount" class="control-label"></label>
        <div class="input-group">
            <input asp-for="Amount" class="form-control"/>
            <div class="input-group-append">
                <select asp-for="AmountMoneyUnit" asp-items="@Html.GetEnumSelectList(typeof(LightMoneyUnit))" class="form-control"></select>
            </div>
        </div>
        <span asp-validation-for="Amount" class="text-danger"></span>
        <span asp-validation-for="AmountMoneyUnit" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="ExpiryMilliseconds" class="control-label"></label>
        <input asp-for="ExpiryMilliseconds" type="number" min="0" class="form-control" />
        <span asp-validation-for="ExpiryMilliseconds" class="text-danger"></span>
    </div>

    <input type="hidden" asp-for="RecipeId"/>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="EditRecipe" asp-controller="Recipes" class="btn btn-secondary" asp-route-id="@Model.RecipeId">Back to recipe</a>
    </div>
</form>
@await Component.InvokeAsync("RecipeActionFooter", new
{
    recipeId = @Model.RecipeId, 
    recipeActionIdInGroupBeforeThisOne = @Model.RecipeActionIdInGroupBeforeThisOne
})