@using Microsoft.EntityFrameworkCore
@model EditRecipeActionViewModel

@{
    ViewData["Title"] = $"{(string.IsNullOrEmpty( Model.RecipeAction?.Id)? "Create" : "Edit")} Recipe Action";
}

<div class="row">
    <div class="col-lg-12 text-center">
        <partial name="_StatusMessage" model="@Model.StatusMessage"/>
    </div>
</div>
<h2>@ViewData["Title"]</h2>

<form method="post">
    <input type="hidden" asp-for="RecipeActionGroupId"/>
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="ActionId" class="control-label"></label>
        <select asp-for="ActionId" asp-items="Model.Actions" class="form-control"> </select>
        <span asp-validation-for="ActionId" class="text-danger"></span>
    </div>

    @if (Model.RecipeAction != null)
    {

        <div class="card">
            <div class="card-body d-flex justify-content-between">
                <div>
                    @await Component.InvokeAsync("ViewRecipeAction", new {recipeAction = Model.RecipeAction})
                </div>

            </div>
        </div>
    }
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Next</button>
        <a asp-action="EditRecipe" asp-controller="Recipes" asp-route-id="@Model.RecipeId" class="btn btn-secondary">Back to recipe</a>
    </div>
</form>